package com.example.NotificationService.Listener;

import com.example.NotificationService.Impl.MailService;
import com.example.NotificationService.client.IDriverClient;
import com.example.NotificationService.client.IUserClient;
import com.example.NotificationService.dto.DriverViewModel;
import com.example.NotificationService.dto.PersonViewModel;
import com.example.NotificationService.dto.TripDto;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.springframework.kafka.annotation.KafkaListener;
import org.springframework.stereotype.Service;

@Service
public class TripListenerService {

    private final ObjectMapper objectMapper;
    private final IDriverClient driverClient;
    private final IUserClient userClient;
    private final MailService mailService;

    public TripListenerService(ObjectMapper objectMapper, IDriverClient driverClient, IUserClient userClient, MailService mailService) {
        this.objectMapper = objectMapper;
        this.driverClient = driverClient;
        this.userClient = userClient;
        this.mailService = mailService;
    }

    @KafkaListener(topics = "trip-created", groupId = "notification-group")
    public void createdTrip(String message) throws Exception {
        try {
            TripDto tripDto = objectMapper.readValue(message, TripDto.class);
            DriverViewModel driverViewModel = driverClient.findById(tripDto.getDriverId());
            PersonViewModel personViewModel = userClient.findById(driverViewModel.getPersonId());
            String subject = "üìç Yeni Bir Yolculuk Olu≈üturuldu!";
            String body = String.format("""
                    Merhaba %s,
                    
                    Sistemimizde adƒ±nƒ±za yeni bir yolculuk olu≈üturulmu≈ütur.
                    
                    Yolculuk Bilgileri:
                    ‚Ä¢ Ba≈ülangƒ±√ß Noktasƒ±: %s
                    ‚Ä¢ Biti≈ü Noktasƒ±: %s
                    ‚Ä¢ Ba≈ülangƒ±√ß Zamanƒ±: %s
                    ‚Ä¢ Yolculuk Tipi: %s
                    
                    L√ºtfen sisteme giri≈ü yaparak detaylarƒ± kontrol edin.
                    
                    G√ºvenli s√ºr√º≈üler dileriz.  
                    FleetWise Ekibi
                    """, personViewModel.getUsername(), tripDto.getStartLocation(), tripDto.getEndLocation(), tripDto.getStartTime(), tripDto.getTripType());

            mailService.sendMail(personViewModel.getEmail(), subject, body);

        } catch (Exception e) {
            throw new Exception(e);
        }
    }

    @KafkaListener(topics = "trip-start", groupId = "notification-group")
    public void startTrip(String message) throws Exception {
        try {
            TripDto tripDto = objectMapper.readValue(message, TripDto.class);
            DriverViewModel driverViewModel = driverClient.findById(tripDto.getDriverId());
            PersonViewModel personViewModel = userClient.findById(driverViewModel.getPersonId());
            String subject = "üöÄ Yolculuƒüunuz Ba≈üladƒ±!";
            String body = String.format("""
                    Merhaba %s,
                    
                    Planlanan yolculuƒüunuz sistem √ºzerinde ba≈ülatƒ±lmƒ±≈ütƒ±r.
                    
                    ‚Ä¢ Ba≈ülangƒ±√ß Noktasƒ±: %s  
                    ‚Ä¢ Ba≈ülangƒ±√ß Zamanƒ±: %s  
                    ‚Ä¢ Ara√ß: %s
                    
                    L√ºtfen dikkatli s√ºr√º≈ü yapƒ±n ve kurallara uyun.
                    
                    ƒ∞yi yolculuklar!  
                    FleetWise Ekibi
                    """, personViewModel.getUsername(), tripDto.getStartLocation(), tripDto.getStartTime(), tripDto.getVehicleId());

            mailService.sendMail(personViewModel.getEmail(), subject, body);
        } catch (Exception e) {
            throw new Exception(e);
        }
    }


    @KafkaListener(topics = "trip-paused", groupId = "notification-group")
    public void pauseTrip(String message) throws Exception {
        try {
            TripDto tripDto = objectMapper.readValue(message, TripDto.class);
            DriverViewModel driverViewModel = driverClient.findById(tripDto.getDriverId());
            PersonViewModel personViewModel = userClient.findById(driverViewModel.getPersonId());
            String subject = "‚è∏ Yolculuƒüunuz Duraklatƒ±ldƒ±";
            String body = String.format("""
                    Merhaba %s,
                    
                    Devam etmekte olan yolculuƒüunuz ≈üu anda duraklatƒ±lmƒ±≈ü olarak i≈üaretlendi.
                    
                    ‚Ä¢ Ba≈ülangƒ±√ß Noktasƒ±: %s  
                    ‚Ä¢ Duraklatƒ±lma Zamanƒ±: %s
                    
                    Gerekli durumlarda y√∂neticinizle ileti≈üime ge√ßebilirsiniz.
                    
                    ƒ∞yi g√ºnler dileriz.  
                    FleetWise Ekibi
                    """, personViewModel.getUsername(), tripDto.getStartLocation(), tripDto.getEndTime());
            mailService.sendMail(personViewModel.getEmail(), subject, body);
        } catch (Exception e) {
            throw new Exception(e);
        }
    }

    @KafkaListener(topics = "trip-resume", groupId = "notification-group")
    public void resumeTrip(String message) throws Exception {
        try {
            TripDto tripDto = objectMapper.readValue(message, TripDto.class);
            DriverViewModel driverViewModel = driverClient.findById(tripDto.getDriverId());
            PersonViewModel personViewModel = userClient.findById(driverViewModel.getPersonId());
            String subject = "‚ñ∂Ô∏è Yolculuƒüunuz Devam Ediyor";
            String body = String.format("""
                    Merhaba %s,
                    
                    Duraklatƒ±lan yolculuƒüunuz tekrar ba≈ülatƒ±ldƒ± ve aktif olarak devam etmektedir.
                    
                    ‚Ä¢ G√ºzerg√¢h: %s ‚û° %s  
                    ‚Ä¢ Devam Zamanƒ±: %s
                    
                    G√ºvenli s√ºr√º≈üler dileriz.  
                    FleetWise Ekibi
                    """, personViewModel.getUsername(), tripDto.getStartLocation(), tripDto.getEndLocation(), tripDto.getStartTime());
            mailService.sendMail(personViewModel.getEmail(), subject, body);
        } catch (Exception e) {
            throw new Exception(e);
        }
    }

    @KafkaListener(topics = "trip-cancel", groupId = "notification-group")
    public void cancelTrip(String message) throws Exception {
        try {
            TripDto tripDto = objectMapper.readValue(message, TripDto.class);
            DriverViewModel driverViewModel = driverClient.findById(tripDto.getDriverId());
            PersonViewModel personViewModel = userClient.findById(driverViewModel.getPersonId());
            String subject = "‚ùå Yolculuk ƒ∞ptal Edildi";
            String body = String.format("""
                    Merhaba %s,
                    
                    A≈üaƒüƒ±daki yolculuk sistem √ºzerinden iptal edilmi≈ütir.
                    
                    ‚Ä¢ G√ºzerg√¢h: %s ‚û° %s  
                    ‚Ä¢ Planlanan Ba≈ülangƒ±√ß Zamanƒ±: %s  
                    ‚Ä¢ Yolculuk Tipi: %s
                    
                    ƒ∞ptal gerek√ßesi hakkƒ±nda detaylƒ± bilgiye sistemden ula≈üabilirsiniz.
                    
                    Anlayƒ±≈üƒ±nƒ±z i√ßin te≈üekk√ºr ederiz.  
                    FleetWise Ekibi
                    """, personViewModel.getUsername(), tripDto.getStartLocation(), tripDto.getEndLocation(), tripDto.getStartTime(), tripDto.getTripType());
            mailService.sendMail(personViewModel.getEmail(), subject, body);
        } catch (Exception e) {
            throw new Exception(e);
        }
    }

    @KafkaListener(topics = "trip-complete", groupId = "notification-group")
    public void completeTrip(String message) throws Exception {
        try {
            TripDto tripDto = objectMapper.readValue(message, TripDto.class);
            DriverViewModel driverViewModel = driverClient.findById(tripDto.getDriverId());
            PersonViewModel personViewModel = userClient.findById(driverViewModel.getPersonId());
            String subject = "‚úÖ Yolculuk Tamamlandƒ±";
            String body = String.format("""
                    Merhaba %s,
                    
                    Ba≈üarƒ±yla tamamlanan yolculuƒüunuz sistemimize kaydedilmi≈ütir.
                    
                    ‚Ä¢ G√ºzerg√¢h: %s ‚û° %s  
                    ‚Ä¢ Ba≈ülangƒ±√ß: %s  
                    ‚Ä¢ Biti≈ü: %s  
                    ‚Ä¢ Yolculuk Tipi: %s
                    
                    Yolculuƒüunuzla ilgili geri bildirimde bulunmak isterseniz, sistem √ºzerinden deƒüerlendirme yapabilirsiniz.
                    
                    Ba≈üarƒ±lƒ± s√ºr√º≈ülerinizin devamƒ±nƒ± dileriz.  
                    FleetWise Ekibi
                    """, personViewModel.getUsername(), tripDto.getStartLocation(), tripDto.getEndLocation(), tripDto.getStartTime(), tripDto.getEndTime(), tripDto.getTripType());
            mailService.sendMail(personViewModel.getEmail(),subject,body);
        } catch (Exception e) {
            throw new Exception(e);
        }
    }


}
